// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tmsminimalapi.Data;

#nullable disable

namespace tmsminimalapi.Migrations
{
    [DbContext(typeof(TmsDbContext))]
    [Migration("20250611184426_AddTruckAndDriverTables")]
    partial class AddTruckAndDriverTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("tmsminimalapi.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("booking_date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("DestinationCity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("destination_city");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("notes");

                    b.Property<decimal>("PaidByParty")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("paid_by_party");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("char(36)")
                        .HasColumnName("party_id");

                    b.Property<string>("SourceCity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("source_city");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("tmsminimalapi.Models.BookingTruckAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AdvancePaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("advance_paid");

                    b.Property<decimal>("AgreedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("agreed_amount");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("assignment_date");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("char(36)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("char(36)")
                        .HasColumnName("driver_id");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("notes");

                    b.Property<Guid>("TruckId")
                        .HasColumnType("char(36)")
                        .HasColumnName("truck_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("DriverId");

                    b.HasIndex("TruckId");

                    b.ToTable("BookingTruckAssignments");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("DriverMobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("driver_mobile");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("driver_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DriverMobile")
                        .IsUnique();

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("party_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("PartyName");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("TruckNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("truck_number");

                    b.Property<string>("TruckSize")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("truck_size");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("TruckNumber")
                        .IsUnique();

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Booking", b =>
                {
                    b.HasOne("tmsminimalapi.Models.Party", "Party")
                        .WithMany("Bookings")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("tmsminimalapi.Models.BookingTruckAssignment", b =>
                {
                    b.HasOne("tmsminimalapi.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tmsminimalapi.Models.Driver", "Driver")
                        .WithMany("BookingAssignments")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tmsminimalapi.Models.Truck", "Truck")
                        .WithMany("BookingAssignments")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Driver");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Driver", b =>
                {
                    b.Navigation("BookingAssignments");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Party", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("tmsminimalapi.Models.Truck", b =>
                {
                    b.Navigation("BookingAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
